package com.actionsnippet.qbox {	import com.actionsnippet.qbox.*;	import Box2D.Collision.*;	import Box2D.Collision.Shapes.*;	import Box2D.Dynamics.Contacts.*;	import Box2D.Dynamics.*;	import Box2D.Common.Math.*;	import Box2D.Common.*;	public class QuickContactFilter extends b2ContactFilter {		private var indices:Array=[];		private var callbacks:Array=[];		public function addGroupIndexCallback(func:Function, index:int):void {			trace("crating a call back")			callbacks.push(func);			indices.push(index);		}		override public function ShouldCollide(shape1:b2Shape, shape2:b2Shape):Boolean {			var filter1:b2FilterData=shape1.GetFilterData();			var filter2:b2FilterData=shape2.GetFilterData();			// only difference between default Box2D behavior			for (var i:int=0; i < indices.length; i++) {				var index:int=indices[i];				if (filter1.groupIndex == index && filter2.groupIndex == index) {					callbacks[i](shape1, shape2);				}			}			// -- 			if (filter1.groupIndex == filter2.groupIndex && filter1.groupIndex != 0) {				return filter1.groupIndex > 0;			}			var collide:Boolean=(filter1.maskBits & filter2.categoryBits) != 0 && (filter1.categoryBits & filter2.maskBits) != 0;			return collide;		}	}}